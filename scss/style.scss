@import "_vars.scss";
@import "_popular.scss";
@import "_buttons.scss";
@import "_footer.scss";
@import "_header.scss";
@import "nav.scss";
@import "_main.scss";
@import "_null.scss";
@import "_burger.scss";
@import "_normalize.scss";
@import "_combo.scss";
@import "_deserts.scss";
@import "_drinks.scss";
@import "_grid.scss";
@import "_pizza.scss";




@import url("https://fonts.googleapis.com/css?family=Nunito:regular,600,700&display=swap");


//// Шрифт по умолчанию ==============================================================================================================================================================================================================================================================================
//$fontFamily: "";
//$fontSize: rem(16); // где 14(px) - размер шрифта по умолчанию из макета

//// НАСТРОЙКИ ===============================================================================================================================================================================================================================================================================================
//// Минимальная ширина страницы
//$minWidth: 320;
//// Ширина полотна (макета)
//$maxWidth: 1280;
//// Ширина ограничивающего контейнера (0 = нет ограничения)
//$maxWidthContainer: 1060;
//// Общий отступ у контейнера
//// (30 = по 15px слева и справа, 0 = нет отступа)
//$containerPadding: 30;

//// Тип адаптива:
//// 1 = отзывчивость (у контейнера нет брейкпоинтов),
//// 2 = по брейк-поинтам (контейнер меняет свою ширину по брейк-поинтам)
//$responsiveType: 1;

//// Ширина страбатывания первого брейкпоинта
//$containerWidth: $maxWidthContainer + $containerPadding;

//// Брейк-поинты
//$pc: em($containerWidth); // ПК, ноутбуки, некоторые планшеты в горизонтальном положении
//$tablet: em(991.98); // Планшеты, некоторые телефоны в горизонтальном положении
//$mobile: em(767.98); // Телефоны L
//$mobileSmall: em(479.98); // Телефоны S




//// Ограничивающий контейнер ======================================================================================================================================================================================================================

///*
//(i) Стили будут применяться ко 
//всем классам содержащим *__container
//Например header__container, main__container и т.д.
//Снипет (HTML): cnt
//*/
//@if ($responsiveType==1) {
//	// Отзывчивая
//	[class*="__container"] {
//		@if ($maxWidthContainer>0) {
//			max-width: rem($maxWidthContainer);
//			box-sizing: content-box;
//			margin: 0 auto;
//		}
//		@if ($containerPadding>0) {
//			padding: 0 rem(math.div($containerPadding, 2));
//		}
//	}
//} @else {
//	// По брейк-поинтам
//	[class*="__container"] {
//		margin: 0 auto;
//		@if ($maxWidthContainer>0) {
//			max-width: rem($maxWidthContainer);
//			box-sizing: content-box;
//		} @else {
//			@if ($containerPadding>0) {
//				padding: 0 rem(math.div($containerPadding, 2));
//			}
//		}
//		@media (max-width: $pc) {
//			max-width: rem(970);
//		}
//		@media (max-width: $tablet) {
//			max-width: rem(750);
//		}
//		@media (max-width: $mobile) {
//			max-width: none;
//			@if ($containerPadding>0 and $maxWidthContainer>0) {
//				padding: 0 rem(math.div($containerPadding, 2));
//			}
//		}
//	}
//}

// Подключение базовых стилей, шаблонов (заготовок) и вспомагательных классов

/*
.block {
	padding: 50px 0;
	// .block__title
	&__title {
		font-size: rem(20);
		text-transform: uppercase;
		&:not(:last-child) {
			margin-bottom: em(20, 20);
		}
	}
	// .block__items
	&__items {
		display: grid;
		grid-template-columns: repeat(3, 1fr);
		grid-auto-rows: 1fr;
		gap: 20px;
		@media (max-width: $tablet) {
			grid-template-columns: repeat(2, 1fr);
		}
		@media (max-width: em(560)) {
			grid-template-columns: repeat(1, 1fr);
		}
	}
}
.item {
	background-color: #666;
	padding: 20px;
	display: flex;
	flex-direction: column;
	gap: 15px;

	//display: grid;
	//grid-template-rows: auto 1fr;
	//gap: 15px;
	
	// .item__image-ibg
	&__image-ibg {
		padding-bottom: percent(250, 300);
	}
	// .item__body
	&__body {
		flex: 1 1 auto;

		display: grid;
		justify-items: start;
		grid-template-rows: auto 1fr;
		gap: 10px;
	}
	// .item__title
	&__title {
		text-transform: uppercase;
	}
	// .item__name
	&__name {
	}
	// .item__text
	&__text {
	}
	// .item__link
	&__link {
	}
}
*/

/*
.grid {
	display: grid;
	grid-template-columns: repeat(12, 1fr);
	gap: 15px;
	// .grid__item
	&__item {
		padding: 15px;
		border-radius: rem(15);
		// .grid__item_v1
		&_v1 {
			background-color: #794f45;
			grid-column: span 4;
		}
		// .grid__item_v2
		&_v2 {
			background-color: #7a956b;
			grid-column: span 6;
			grid-row: span 2;
		}
		// .grid__item_v3
		&_v3 {
			background-color: #77608d;
			grid-column: span 6;
		}
		// .grid__item_v4
		&_v4 {
			background-color: rosybrown;
			grid-column: span 3;
		}
		@media (max-width: $tablet) {
			&:nth-child(3) {
				display: none;
			}
			&_v1 {
				grid-column: span 6;
				order: 1;
			}
			&_v2 {
				order: 2;
				grid-column: span 8;
			}
			&_v3 {
				order: 4;
				//grid-column: span 8;
				grid-column-start: 4;
				grid-column-end: 13;
			}
			&_v4 {
				order: 3;
				grid-column: span 4;
			}
		}
		@media (max-width: $mobile) {
			&_v1 {
			}
			&_v2 {
				grid-column: span 10;
			}
			&_v3 {
				order: 4;
				//grid-column: span 8;
				grid-column-start: 3;
				grid-column-end: 13;
			}
			&_v4 {
				order: 3;
				grid-column: span 6;
			}
		}
		@media (max-width: $mobileSmall) {
			grid-column-start: 1;
			grid-column-end: 13;
		}
	}
}
*/

